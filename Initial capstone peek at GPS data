# Import pandas for data processing
import pandas as pd

# Import matplotlib for visualizations
import matplotlib.pyplot as plt

#Import seaborn and numpy for more visualizations and correlation
import seaborn as sb
import numpy as np

#Import Regex to fix the duration and idle time fields
import re

# Load the data into a dataframe, reformat the "Duration" and "Idle Time" fields
driverBehavior = pd.read_csv("Behavior09012016.csv")

#driverBehavior[['Duration_Hours', 'Duration_Minutes']] = driverBehavior['Duration'].str.split(':', expand=True)

#This will create a "Total Duration Minutes" column from the above split column 
#values = driverBehavior.Duration_Hours * 60 + driverBehavior.Duration_Minutes
#driverBehavior['Total Duration Minutes'] = values

# Checkout the data
driverBehavior.head()
driverBehavior.shape
driverBehavior.info()

#https://www.analyticsvidhya.com/blog/2015/04/comprehensive-guide-data-exploration-sas-using-python-numpy-scipy-matplotlib-pandas/

#Rapid Acceleration
figRA=plt.figure()

ax=figRA.add_subplot(1,1,1)
ax.hist(driverBehavior['Acceleration'])

plt.title('Frequency of Rapid Acceleration Events')
plt.xlabel('Number of Rapid Acceleration Events')
plt.ylabel('Drivers')
plt.show()

#Hard Braking
figHB=plt.figure()

ax=figHB.add_subplot(1,1,1)
ax.hist(driverBehavior['Braking'])

plt.title('Frequency of Hard Braking Events')
plt.xlabel('Number of Hard Braking Events')
plt.ylabel('Frequency')
plt.show()

#Aggression Score
figAS=plt.figure()

ax=figAS.add_subplot(1,1,1)
ax.hist(driverBehavior['Aggression Score'], color = 'firebrick')

plt.title('Frequency of Aggression Score')
plt.xlabel('Aggression Score')
plt.ylabel('Frequency')
plt.show()

#Idling Score
figIS=plt.figure()

ax=figIS.add_subplot(1,1,1)
ax.hist(driverBehavior['Idling Score'], color ='royalblue')

plt.title('Frequency of Idling Score')
plt.xlabel('Idling Score')
plt.ylabel('Frequency')
plt.show()

#Miles Driven
figMD=plt.figure()

ax=figMD.add_subplot(1,1,1)
ax.hist(driverBehavior['Miles'])

plt.title('Frequency of Miles Driven')
plt.xlabel('Miles Driven')
plt.ylabel('Frequency')
plt.show()

#Heatmap
corrmat = driverBehavior.corr()
sb.heatmap(corrmat, robust=True, square=True)

#Miles Driven verses Idling Score
figMDIS=plt.figure()

ax=figMDIS.add_subplot(1,1,1)
ax.scatter(driverBehavior['Idling Score'],driverBehavior['Miles'])

plt.title('Idling Score verses Miles Driven')
plt.xlabel('Idling Score')
plt.ylabel('Miles Driven')
plt.show()

#Idling verses Aggression Score
figMDA=plt.figure()

ax=figMDA.add_subplot(1,1,1)
ax.scatter(driverBehavior['Idling Score'],driverBehavior['Aggression Score'], color='green')

plt.title('Idling Score verses Aggression Score')
plt.xlabel('Idling Score')
plt.ylabel('Aggression Score')
plt.show()

#Idling vs Acceleration
figIA=plt.figure()

ax=figIA.add_subplot(1,1,1)
ax.scatter(driverBehavior['Idling Score'],driverBehavior['Acceleration'], color='green')

plt.title('Idling Score verses Acceleration Events')
plt.xlabel('Idling Score')
plt.ylabel('Acceleration Events')
plt.show()



#:::Swarmplot of Acceleration vs Idling
sb.swarmplot(x="Acceleration", y="Idling Score", data=driverBehavior)
plt.show()

#Idling vs. Acceleration Regression
sb.lmplot(x="Idling Score", y="Acceleration", data=driverBehavior)
plt.show()

#Idling vs. Acceleration Regression
sb.lmplot(x="Acceleration", y="Idling Score", data=driverBehavior)
plt.show()

#Idling vs. Aggression Score
sb.lmplot(x="Aggression Score", y="Idling Score", data=driverBehavior)
plt.show()

#Idling vs. Miles Driven
sb.lmplot(x="Idling Score", y="Miles", data=driverBehavior)
plt.show()

#Aggression vs. Miles Driven
sb.lmplot(x="Miles", y="Aggression Score", data=driverBehavior)
plt.show()

#Idling vs. Braking Regression
sb.swarmplot(x="Braking", y="Idling Score", data=driverBehavior)
plt.show()

#Braking vs Acceleration
sb.lmplot(x="Braking", y="Acceleration", data=driverBehavior)
plt.show()

#Correlation between Miles and Idle
print (np.corrcoef(driverBehavior['Idling Score'], driverBehavior['Miles']))
sb.jointplot(x="Idling Score", y="Miles", data=driverBehavior, kind="reg")
plt.show()

#Correlation between Braking and Acceleration
print (np.corrcoef(driverBehavior['Braking'], driverBehavior['Acceleration']))
sb.jointplot(x="Braking", y="Acceleration", data=driverBehavior, kind="reg")
plt.show()

#Pair Plot
sb.pairplot(driverBehavior,vars=["Miles","Braking", "Acceleration", "Idling Score","Aggression Score"])



#Max of Acceleration
max(driverBehavior['Acceleration'])

#Max of Braking
max(driverBehavior['Braking'])

#Min of Aggression Score
min(driverBehavior['Aggression Score'])

#Min / Max Miles Driven
min(driverBehavior['Miles'])
max(driverBehavior['Miles'])

#Max Idle Percentage
max(driverBehavior['Idling %'])

#Idling % - Total List
#f, ax = plt.subplots(figsize=(6, 60))
#idlingpercentage = driverBehavior.sort_values("Idling %", ascending=False)
#sb.barplot(x="Idling %", y="Name", data=idlingpercentage)

#Idling % - Top 10
driverBehavior.sort_values("Idle Time", ascending=False).head(10)

#Idling % - Bottom 10
driverBehavior.sort_values("Idling %", ascending=False).tail(10)
